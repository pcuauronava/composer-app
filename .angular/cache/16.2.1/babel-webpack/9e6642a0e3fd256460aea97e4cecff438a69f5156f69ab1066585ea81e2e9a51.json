{"ast":null,"code":"var _class;\nimport { of } from 'rxjs';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ComposerService {\n  constructor() {\n    this.composers = [{\n      composerId: 100,\n      fullName: \"Ludwig van Beethoven\",\n      genre: \"Classical\"\n    }, {\n      composerId: 101,\n      fullName: \"Johann Sebastian Bach\",\n      genre: \"Classical\"\n    }, {\n      composerId: 102,\n      fullName: \"Wolfgang Amadeus Mozart\",\n      genre: \"Classical\"\n    }, {\n      composerId: 103,\n      fullName: \"Johannes Brahms\",\n      genre: \"Classical\"\n    }, {\n      composerId: 104,\n      fullName: \"Joseph Haydn\",\n      genre: \"Classical\"\n    }, {\n      composerId: 105,\n      fullName: \"Patrick Kavanaugh\",\n      genre: \"Classical\"\n    }];\n  }\n  getComposers() {\n    return of(this.composers);\n  }\n  getComposer(composerId) {\n    // this extra code is to prevent the error: \"Object is possibly 'undefined'.\"\n    for (let composer of this.composers) {\n      if (composer.composerId === composerId) {\n        return composer;\n      }\n    }\n    //this line is added to prevent the error: \"Function lacks ending return statement and return type does not include 'undefined'.\"\n    return {};\n  }\n  filterComposers(name) {\n    return of(this.composers).pipe(map(composers => composers.filter(composer => composer.fullName.toLowerCase().indexOf(name) > -1)));\n  }\n}\n_class = ComposerService;\n_class.ɵfac = function ComposerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["of","map","ComposerService","constructor","composers","composerId","fullName","genre","getComposers","getComposer","composer","filterComposers","name","pipe","filter","toLowerCase","indexOf","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Patrick\\Documents\\GitHub\\composer-app\\src\\app\\composer.service.ts"],"sourcesContent":["/**\n * Title: composer.service.ts\n * Author: Professor Krasso\n * Date: 09/01/2023\n * Modified By: Patrick Cuauro\n * Description: Service for composer\n */\nimport { Injectable } from '@angular/core';\nimport { IComposer } from './composer.interface';\nimport { Observable } from 'rxjs';\nimport { of } from 'rxjs';\nimport { map } from 'rxjs';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComposerService {\n\n  composers: Array<IComposer>;\n\n  constructor() {\n      this.composers = [\n          {\n              composerId: 100, fullName: \"Ludwig van Beethoven\", genre: \"Classical\"\n          },\n          {\n              composerId: 101, fullName: \"Johann Sebastian Bach\", genre: \"Classical\"\n          },\n          {\n              composerId: 102, fullName: \"Wolfgang Amadeus Mozart\", genre: \"Classical\"\n          },\n          {\n              composerId: 103, fullName: \"Johannes Brahms\", genre: \"Classical\"\n          },\n          {\n              composerId: 104, fullName: \"Joseph Haydn\", genre: \"Classical\"\n          },\n          {\n              composerId: 105, fullName: \"Patrick Kavanaugh\", genre: \"Classical\"\n          },\n          ]\n  }\n  getComposers(): Observable<IComposer[]> {\n      return of(this.composers);\n  }\n  getComposer(composerId: number) : IComposer{\n      // this extra code is to prevent the error: \"Object is possibly 'undefined'.\"\n      for (let composer of this.composers) {\n          if (composer.composerId === composerId) {\n              return composer;\n          }\n      }\n      //this line is added to prevent the error: \"Function lacks ending return statement and return type does not include 'undefined'.\"\n      return {} as IComposer;\n  }\n  filterComposers(name: string) : Observable<IComposer[]> {\n    return of(this.composers).pipe(map(composers => composers.filter(composer => composer.fullName.toLowerCase().indexOf(name) > -1)))\n  }\n}\n"],"mappings":";AAUA,SAASA,EAAE,QAAQ,MAAM;AACzB,SAASC,GAAG,QAAQ,MAAM;;AAO1B,OAAM,MAAOC,eAAe;EAI1BC,YAAA;IACI,IAAI,CAACC,SAAS,GAAG,CACb;MACIC,UAAU,EAAE,GAAG;MAAEC,QAAQ,EAAE,sBAAsB;MAAEC,KAAK,EAAE;KAC7D,EACD;MACIF,UAAU,EAAE,GAAG;MAAEC,QAAQ,EAAE,uBAAuB;MAAEC,KAAK,EAAE;KAC9D,EACD;MACIF,UAAU,EAAE,GAAG;MAAEC,QAAQ,EAAE,yBAAyB;MAAEC,KAAK,EAAE;KAChE,EACD;MACIF,UAAU,EAAE,GAAG;MAAEC,QAAQ,EAAE,iBAAiB;MAAEC,KAAK,EAAE;KACxD,EACD;MACIF,UAAU,EAAE,GAAG;MAAEC,QAAQ,EAAE,cAAc;MAAEC,KAAK,EAAE;KACrD,EACD;MACIF,UAAU,EAAE,GAAG;MAAEC,QAAQ,EAAE,mBAAmB;MAAEC,KAAK,EAAE;KAC1D,CACA;EACT;EACAC,YAAYA,CAAA;IACR,OAAOR,EAAE,CAAC,IAAI,CAACI,SAAS,CAAC;EAC7B;EACAK,WAAWA,CAACJ,UAAkB;IAC1B;IACA,KAAK,IAAIK,QAAQ,IAAI,IAAI,CAACN,SAAS,EAAE;MACjC,IAAIM,QAAQ,CAACL,UAAU,KAAKA,UAAU,EAAE;QACpC,OAAOK,QAAQ;;;IAGvB;IACA,OAAO,EAAe;EAC1B;EACAC,eAAeA,CAACC,IAAY;IAC1B,OAAOZ,EAAE,CAAC,IAAI,CAACI,SAAS,CAAC,CAACS,IAAI,CAACZ,GAAG,CAACG,SAAS,IAAIA,SAAS,CAACU,MAAM,CAACJ,QAAQ,IAAIA,QAAQ,CAACJ,QAAQ,CAACS,WAAW,EAAE,CAACC,OAAO,CAACJ,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACpI;;SAzCWV,eAAe;;mBAAfA,MAAe;AAAA;;SAAfA,MAAe;EAAAe,OAAA,EAAff,MAAe,CAAAgB,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}